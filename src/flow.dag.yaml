$schema: https://azuremlschemas.azureedge.net/promptflow/latest/Flow.schema.json
environment:
  python_requirements_txt: requirements.txt
inputs:
  input_file:
    type: string #local file path
    default: /Users/00153837yeohyihang/Desktop/Code/current-working/llm-framework/src/test_sample/sample01.pdf
  inference_strategy:
    type: string
    default: vision_llm
  ocr_strategy:
    type: string
    default: azure_document_intelligence #or vision_llm, simple, doctr, easy_ocr, azure_document_intelligence, advanced, document_intelligence_llm
  output_format:
    type: string
    default: json
  callback_url:
    type: string
    default: https://webhook.site/1accd4fd-5d0a-4748-a8e1-3a04662428e6
  json_schema:
    type: string
  use_schema:
    type: bool
    default: false
outputs:
  payload_path:
    type: string
    reference: ${load_document.output}
  extraction_result:
    type: string
    reference: ${extract_text.output}
  json_schema:
    type: string
    reference: ${extract_schema.output}
  raw_ocr_result:
    type: string
    reference: ${perform_ocr.output}

nodes:
  - name: load_document
    type: python
    source:
      type: code
      path: ./agents/load_file.py
    inputs:
      file_path: ${inputs.input_file}
  - name: optimize_image
    type: python
    source:
      type: code
      path: ./agents/optimize_image.py
    inputs:
      folder_path: ${load_document.output}
  - name: perform_ocr
    type: python
    source:
      type: code
      path: ./agents/perform_ocr.py
    inputs:
      folder_path: ${optimize_image.output}
      ocr_strategy: ${inputs.ocr_strategy}
  - name: extract_schema
    type: python
    # activate:
    #   when: ${inputs.use_schema}
    #   is: false
    source:
      type: code
      path: ./agents/extract_schema.py
    inputs:
      ocr_output: ${perform_ocr.output}
      json_schema: ${inputs.json_schema}
      use_schema: ${inputs.use_schema}
  - name: extract_text
    type: python
    source:
      type: code
      path: ./agents/extract_text.py
    inputs:
      ocr_output: ${perform_ocr.output}
      output_format: ${inputs.output_format}
      schema: ${extract_schema.output}
